<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foodMapper">

	<sql id="restaurantColumn">
		<!-- RESTAURANT_NAME ADDRESS CATEGORY content_CODE restaurantName addr 
			category contentCode -->
		content_code, restaurant_name, restaurant_info, category, category2, restaurant_address, restaurant_Coordinates, restaurant_pic, id
	</sql>
<!-- 
  content_code varchar2(30) constraint content_code_ri_pk primary key,
  restaurant_name varchar2(30),
  restaurant_info varchar2(2000),
  restaurant_address varchar2(50),
  category varchar2(50),
  category2 varchar2(50),
  restaurant_address varchar2(50),
  restaurant_Coordinates
  restaurant_pic varchar2(50),
  id constraint id_restaurant_fk references usertable(id) -->
  
<resultMap type="kosta.web.model.vo.restaurant.RestaurantVo" id="restaurantSelectMap">
		<id column="content_CODE" property="contentCode" />
		<result column="RESTAURANT_NAME" property="restaurantName" />
		<result column="restaurant_info" property="restaurantInfo" />
		<result column="CATEGORY" property="category" />
		<result column="CATEGORY2" property="category2" />
		<result column="restaurant_address" property="restaurantAddr" />
		<result column="restaurant_Coordinates" property="restaurantCoordinates" />
		<result column="restaurant_pic" property="restaurantPic" />
		</resultMap> 
<!-- content_code varchar2(30) constraint content_code_ri_pk primary key,
  restaurant_name varchar2(30),
  restaurant_address varchar2(50),
  category varchar2(50),
  category2 varchar2(50),
  restaurant_info varchar2(2000),
  restaurant_pic varchar2(50),
  id constraint id_restaurant_info_fk references usertable(id) -->
	


	<!-- 맛집정보 등록하기 -->
	<insert id="insertRestaurant" parameterType="kosta.web.model.vo.restaurant.RestaurantVo">
		insert into Restaurant
		(content_code, restaurant_name, restaurant_info, category, category2, restaurant_address, restaurant_Coordinates, restaurant_pic, id)
		values (#{contentCode},#{restaurantName}, #{restaurantInfo}, #{category}, #{category2}, #{restaurantAddr}, #{restaurantCoordinates}, #{restaurantPic}, #{id})
	</insert>

	<!-- 맛집정보 확인하기 -->
	<select id="selectByRestaurant" parameterType="kosta.web.model.vo.restaurant.RestaurantVo"	resultMap="restaurantSelectMap">
		select 	CONTENT_CODE , RESTAURANT_NAME , RESTAURANT_INFO , CATEGORY , CATEGORY2 , RESTAURANT_ADDRESS , RESTAURANT_COORDINATES , RESTAURANT_PIC , ID
		from Restaurant
<!-- 		<where>
				RESTAURANT_NAME =#{restaurantName}
				RESTAURANT_ADDRESS
				RESTAURANT_INFO
				CONTENT_CODE = #{_parameter}
			
		</where> -->
	</select>
	
	
	<!-- content_CODE, RESTAURANT_NAME, ADDRESS, CATEGORY,id -->
	<!-- 맛집 수정하기 -->
	<update id="updateRestaurant" >
	update Restaurant
		   set RESTAURANT_NAME = ${restaurantName},
		   		 RESTAURANT_INFO = ${restaurantInfo},
		   		 CATEGORY = ${category},
		   		 CATEGORY2 = ${category2},
		   		 RESTAURANT_ADDRESS = ${restaurantAddr},
		   		 RESTAURANT_COORDINATES = ${restaurantCoordinates},
		   		 RESTAURANT_PIC = ${restaurantPic}
	 where content_CODE=${contentCode}
	</update>
	
	
	<!-- 맛집 삭제하기-->
	<delete id="deleteRestaurant" parameterType="String">
		delete Restaurant_INFO where content_CODE=#{_parameter}
	</delete>
	
	
	
	
</mapper>

